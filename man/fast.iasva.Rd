% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fast.iasva.R
\name{fast.iasva}
\alias{fast.iasva}
\title{A function for fast IA-SVA}
\usage{
fast.iasva(Y, X, intercept = TRUE, num.sv = NULL, pct.cutoff = 1,
  num.tsv = NULL, tol = 1e-10, verbose = FALSE)
}
\arguments{
\item{Y}{read counts matrix with samples in row and genes in column.}

\item{X}{known variables.}

\item{intercept}{If intercept=FALSE, the linear intercept is not included in the model.}

\item{num.sv}{number of surrogate variables to estimate.}

\item{pct.cutoff}{percetage threshold for SV retention. IA-SVA computes the percentage of unmodeled variance explained by the putative hidden factor and compare it with the user-defined threshold. If the percentage is greater than the threshold, SV is retained.}

\item{num.tsv}{num of top singular values to be used in computing the percentage of unmodeled variation explained by the putative hidden factor. If num.tsv=NULL, all singular values are used.}

\item{tol}{stopping tolerance for the augmented implicitly restarted Lanczos bidiagonalization algorithm}

\item{verbose}{If verbose=TRUE, the function outputs detailed messages.}
}
\value{
sv matrix of estimated surrogate variables, one column for each surrogate variable.

pct vector of percentages of unmodeled variance explained by each surrogate variable, one value for each surrogate variable.

n.sv number of obtained surrogate variables.
}
\description{
The iterative procedure of fast IA-SVA is implemented in this function (fast.iasva). fast.iasva() iteratively  
identify a hidden factor for unwanted variation while accounting for all known factors, compute its contribution 
(i.e., the percentage of unmodeled variation explained by the hidden factor) on the unmodeled variation in the data. 
If the contribution is greater than a user-defined cutoff (pct.cutoff, default = 1%), 
the factor is retained and used as a known variable in the next iteration to find further hidden factors.
}
\examples{
library(iasva)
data(iasva_test)
iasva.res <- fast.iasva(iasvaY, iasvaX) 
 
}
